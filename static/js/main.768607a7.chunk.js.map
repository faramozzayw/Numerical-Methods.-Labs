{"version":3,"sources":["function/MyFunc.js","function/RegExpArray.js","function/Parser.js","components/Jumbotron.jsx","components/Form.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["_Parser__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","ctg","x","Math","tan","actg","PI","atan","relength","localX","toString","p","indexOf","Number","parseFloat","length","slice","Calc","fx","a","b","h","console","clear","functionString","Parser","u","eval","isFinite","result","v","resX","xh","alert","concat","push","RegExpArray","string","log","i","regExp","RegExp","test","replace","Jumbotron","react_default","createElement","className","Component","state","handleInputChange","e","_this","setState","Object","defineProperty","target","name","value","handleClick","preventDefault","trim","_ref","String","MyFunc","type","placeholder","id","this","onChange","bind","onClick","App","Jumbotron_Jumbotron","Form_default","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.768607a7.chunk.js","sourcesContent":["import Parser from './Parser';\r\n\r\nconst ctg = x => 1 / Math.tan(x);\r\n\r\nconst actg = x => Math.PI / 2 - Math.atan(x);\r\n\r\nconst relength = x => {\r\n\tlet count = 5;\r\n\tlet localX = x.toString();\r\n\tlet p = localX.indexOf('.') + 1 + count;\r\n\tlet result = Number.parseFloat(localX.length > 5 ? localX.slice(0, p) : localX);\r\n\treturn result;\r\n}\r\n\r\nconst Calc = (fx, a, b, h) => {\r\n\tconsole.clear();\r\n\tlet x = a;\r\n\tlet functionString = Parser(fx);\r\n\r\n\tlet u = eval(functionString);\r\n\tif (!Number.isFinite(u)) {\r\n\t\talert('Неочікуваний результат. Будь ласка, перевірте правильність даних та спробуйте знову.')\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet result = [];\r\n\tdo {\r\n\t\tlet v = eval(functionString);\r\n\t\tif (u * v < 0) {\r\n\t\t\tlet resX = relength(x);\r\n\t\t\tlet xh = relength(x-h);\r\n\t\t\talert(`На ділянці [${(x-h) < x ? `${xh}, ${resX}` : `${resX}, ${xh}`}] існує корінь`);\r\n\t\t\tresult.push(`[${(x-h) < x ? `${xh}, ${resX}` : `${resX}, ${xh}`}]`);\r\n\t\t\tu = v;\r\n\t\t} else {\r\n\t\t\tu = v;\r\n\t\t}\r\n\r\n\t\tx = relength(x) + h;\r\n\t} while (x <= b);\r\n\r\n\talert('Кінець відокремлення.');\r\n\treturn result;\r\n}\r\n\r\nexport default Calc;","const RegExpArray = [\r\n\t[/\\^/gi, '**'],\r\n\t[/(\\d{1,})[x-х]/gi, '$1*x'],\r\n\t[/sqrt\\(2\\)/g, 'Math.SQRT2'],\r\n\t[/sqrt\\((.*?)\\)/g, 'Math.sqrt($1)'],\r\n\r\n\t[/\\|(.*?)\\|/g, 'Math.abs($1)'],\r\n\t[/(pi|PI)/g, 'Math.PI'],\r\n\r\n\t[/log\\((.*?)\\)/gi, 'Math.log($1)'],\r\n\t[/ln\\((.*?)\\)/g, 'Math.log($1)'],\r\n\r\n\t[/\\barccos\\((.*?)\\)/g, 'Math.acos($1)'],\r\n\t[/\\barcsin\\((.*?)\\)/g, 'Math.asin($1)'],\r\n\t[/\\barctg\\((.*?)\\)/g, 'Math.atan($1)'],\r\n\t[/\\barcctg\\((.*?)\\)/g, 'actg($1)'],\r\n\r\n\t[/\\bcos\\((.*?)\\)/g, 'Math.cos($1)'],\r\n\t[/\\bsin\\((.*?)\\)/g, 'Math.sin($1)'],\r\n\t[/\\bctg\\((.*?)\\)/g, 'ctg($1)'],\r\n\t[/\\btg\\((.*?)\\)/g, 'Math.tan($1)'],\r\n];\r\n\r\nexport default RegExpArray;","import RegExpArray from './RegExpArray';\r\n\r\nconst Parser = string => {\r\n\tconsole.log(\"[input in Parser]: \", string);\r\n\tlet i = 0;\r\n\tlet result = string;\r\n\twhile (i < RegExpArray.length) {\r\n\t\tlet regExp = new RegExp(RegExpArray[i][0]);\r\n\t\tlet string = RegExpArray[i][1];\r\n\t\tresult = regExp.test(result) ? result.replace(regExp, string) : result;\r\n\t\ti++;\r\n\t}\r\n\tconsole.log(\"[output in Parser]: \", result);\r\n\r\n\treturn result;\r\n}\r\n\r\nexport default Parser;","import React, { Component } from 'react';\r\n\r\nexport default class Jumbotron extends Component {\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<section className=\"uk-section uk-section-primary\">\r\n\t\t\t  <div className=\"uk-container\">\r\n\t\t\t    <h1 className=\"\">Numerical Methods</h1>\r\n\t\t\t  </div>\r\n\t\t\t</section>\r\n\t\t);\r\n\t};\r\n};","import React, { Component } from 'react';\r\n\r\nimport MyFunc from './../function/MyFunc'\r\n\r\nexport default class  extends Component {\r\n\tstate = {\r\n\t\tfx:'',\r\n\t\th: '',\r\n\t\ta: '',\r\n\t\tb: ''\r\n\t}\r\n\r\n\thandleInputChange = e => this.setState({[e.target.name]: e.target.value})\r\n\r\n\thandleClick = e => {\r\n\t\te.preventDefault();\r\n\t\tconsole.clear();\r\n\t\tif (this.state.fx.trim() === '' || this.state.a.trim() === '' || this.state.b.trim() === '' || this.state.h.trim() === '') {\r\n\t\t\talert('Input error. Check the correctness of the data.'); \r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst [fx, a, b, h] = [String(this.state.fx), Number(this.state.a), Number(this.state.b), Number(this.state.h)];\r\n\t\tlet result;\r\n\r\n\t\tNumber.isFinite(a) && Number.isFinite(b) && Number.isFinite(h) && h > 0  ? \r\n\t\t\tresult = MyFunc(fx, a, b, h) :\r\n\t\t\talert('Input error. Check the correctness of the data.');\r\n\r\n\t\tconsole.log(result);\r\n\t}\r\n\r\n\trender()  {\r\n\t\treturn (\r\n\t\t\t<div className=\"uk-container\">\r\n\t\t\t\t<form>\r\n\t\t\t    <fieldset className=\"uk-fieldset\">\r\n\t\t\t        <legend className=\"uk-legend\">A inputting data</legend>\r\n\t\t\t        <div className=\"uk-margin\">\r\n\t\t\t            <input \tclassName=\"uk-input uk-form-large\" type=\"text\" placeholder=\"Input a function\" id=\"func\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.fx}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='fx'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange.bind(this)}\r\n\t\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t<div className=\"uk-margin\">\r\n\t\t\t            <input className=\"uk-input uk-form-large\" type=\"text\" placeholder=\"Input a start of interval\" id=\"first\"\r\n\t\t\t            \t\t\t\tvalue={this.state.a}\r\n\t\t\t            \t\t\t\tname='a'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange.bind(this)}\r\n\t\t\t            \t\t\t\t/>\r\n\t\t\t         \t</div>\t\t\t\t\r\n\t\t\t        <div className=\"uk-margin\">\r\n\t\t\t            <input className=\"uk-input uk-form-large\" type=\"text\" placeholder=\"Input a end of interval\" id=\"end\"\r\n\t\t\t            \t\t\t\tvalue={this.state.b}\r\n\t\t\t            \t\t\t\tname='b'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange.bind(this)}\r\n\t\t\t            \t\t\t\t/>\r\n\r\n\t\t\t        <div className=\"uk-margin\">\r\n\t\t\t            <input className=\"uk-input uk-form-large\" type=\"text\" placeholder=\"Input a accuracy\" id=\"h\"\r\n\t\t\t            \t\t\t\tvalue={this.state.h}\r\n\t\t\t            \t\t\t\tname='h'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange.bind(this)}\r\n\t\t\t            \t\t\t\t/>\r\n\t\t\t         \t</div>\t\t\t\t\r\n\t\t\t        \t\t<button className=\"uk-button uk-button-primary\"\r\n\t\t\t        \t\tonClick={this.handleClick.bind(this)}>Start a root separation</button>\r\n\t\t\t        </div>\r\n\t\t\t    </fieldset>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\n\r\nimport Jumbotron from './Jumbotron';\r\nimport Form from './Form';\r\n\r\nimport './../uikit/css/uikit.min.css';\r\nimport './../css/App.css';\r\n\r\nconst App = () => {\r\n  return(\r\n    <div className=\"App\">\r\n        <Jumbotron />\r\n        <main className=\"App-body\">\r\n          <Form />\r\n        </main>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}